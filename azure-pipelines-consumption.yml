# Python Function App to Linux on Azure
# Build a Python function app and deploy it to Azure as a Linux function app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: '10117562-4acd-4374-a766-76c6cb22c545'

  # Function app name
  functionAppName: 'f-python-consumption'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Working Directory
  workingDirectory: '$(System.DefaultWorkingDirectory)/'

stages:
- stage: Build
  displayName: Build stage

  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - bash: |
        if [ -f extensions.csproj ]
        then
            dotnet build extensions.csproj --runtime ubuntu.16.04-x64 --output ./bin
        fi
      workingDirectory: $(workingDirectory)
      displayName: 'Build extensions'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(workingDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

    - task: AzureCLI@2
      displayName: 'Azure CLI '
      inputs:
        azureSubscription: 'KevinLi-Internal(ed5ebdf4-3f16-4970-8666-b0b3803c727e)'
        scriptType: pscore
        scriptLocation: inlineScript
        inlineScript: 'az functionapp deployment source config-zip     -g AML -n  f-consumption --src $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip --build-remote true  --verbose'

# - stage: Deploy
#   displayName: Deploy stage
#   dependsOn: Build
#   condition: succeeded()

#   jobs:
#   - deployment: Deploy
#     displayName: Deploy
#     environment: 'development'
#     pool:
#       vmImage: $(vmImageName)

#     strategy:
#       runOnce:
#         deploy:
#           steps:
#           - task: AzureCLI@2
#             displayName: 'Azure CLI '
#             inputs:
#               azureSubscription: 'KevinLi-Internal(ed5ebdf4-3f16-4970-8666-b0b3803c727e)'
#               scriptType: pscore
#               scriptLocation: inlineScript
#               inlineScript: 'az functionapp deployment source config-zip     -g AML -n  f-python-consumption --src $(Build.BuildId).zip --build-remote true  --verbose'
